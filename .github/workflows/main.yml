name: Portfolio deploy master

on: 
  push:
    branches: 
    - main


jobs:

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Create datetime output
      id: datetime
      run: | 
        echo "::set-output name=date::$(date +'%Y-%m-%d')"
        echo "::set-output name=datetime::$(date +'%Y-%m-%d_%H-%M-%S')"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
        aws-region: eu-central-1

    - name: Build C# Lambda & upload to S3
      env: 
        S3_BUCKET: "learning.functions"
        ZIP_FILE: "function_CSharp_GetRandom.zip"
        ZIP_FILE_ARCHIVE: "function_CSharp_GetRandom_${{steps.datetime.outputs.datetime}}.zip"
      run: |
        cd src
        dotnet build -c RELEASE
        ls ./bin/Release/netcoreapp3.1/
        # zip could need -recursive
        zip -r ${ZIP_FILE} ./bin/Release/netcoreapp3.1/
       
        exists=$(aws s3 ls s3://${S3_BUCKET}/${ZIP_FILE})
        echo exists=$exists
        if [[ ! -z "$exists" ]] ; then
          echo create a copy (archive)
          aws s3 cp s3://${S3_BUCKET}/${ZIP_FILE} s3://${S3_BUCKET}/${ZIP_FILE_ARCHIVE}
        fi
        aws s3 cp ./${ZIP_FILE} s3://${S3_BUCKET}


# TEMP COMMENT
#    - name: Serverless deploy
#      uses: serverless/github-action@master
#      with: 
#        args: deploy
##      env: 
##        AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}

