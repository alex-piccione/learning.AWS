# syntax ref.: https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/
service: LearningPortfolio
configValidationMode: error
# https://www.serverless.com/framework/docs/providers/aws/events/apigateway/#example-lambda-proxy-event-default

provider:
  name: aws
  runtime: dotnetcore3.1
  #stage: test # passed by call
  #region: eu-central-1 # passed by call
  lambdaHashingVersion: "20201221" # optimize resolution of lambda function (and avoid warning)
  deploymentBucket:
    name: ${file(src/Serverless/shared-variables.yml):deploymentBucket.name}
  environment:
    handler_prefix: "Learning::Learning.Portfolio"

  #endpointType: regional # Optional endpoint configuration for API Gateway REST API. Default is Edge.
    #apiGateway: # Optional API Gateway global config
      #restApiId: xxxxxxxxxx # REST API resource ID. Default is generated by the framework

  apiName: LearningPortfolio # Use a custom name for the API Gateway API

package:
  individually: true

functions:
  CreateFund: # any name
    handler: ${{handler_prefix}}.CreateFund::Handle   # assembly::namespace.class::method
    package: &package
      artifact: ${file(src/Serverless/shared-variables.yml):zipFile}
    #warmup: true
    #alarms:
    #   - functionErrors
    #   - functionDuration
    events:
      # - http: GET fund
      - http:
          path: portfolio/fund
          method: POST
          cors: true
        #authorizer:
        #  type: "COGNITO_USER_POOLS"
        #  scopes: 
        #    - ...
        #    - ... 
        #  authorizedId:
        #    Fn::ImportValue: "..."

  ListFund:
    handler: "${{handler_prefix}}.GetFund::Handle   # .Class::Method
    package:
      <<: *package
    events:
      - http:
          path: portfolio/fund
          method: GET
          cors: true

  GetFund2:
    handler: ${handler_prefix}.GetFund::Handle   # assembly::namespace.class::method
    package: 
      <<: *package
    events:
      - http:
          path: portfolio/fund/{id}
          method: GET
          cors: true

  DeleteFund:
    handler: ${handler_prefix}.DeleteFund::Handle   # assembly::namespace.class::method
    package:
      <<: *package
    events:
      - http:
          path: portfolio/fund/{id}
          method: DELETE
          cors: true

  UpdateFund:
    handler: ${handler_prefix}.UpdateFund::Handle   # assembly::namespace.class::method
    package:
      <<: *package
    events:
      - http:
          path: portfolio/fund/{id}
          method: PUT
          cors: true

    #<file src="client-data-collection\serverless.yml" target="functions\client-data-collection"/>
    #<file src="Services\ClientDataCollection.Lambda\bin\Release\netcoreapp3.1\clientdatacollectiondomain-deploy-package.zip" target="functions" />
